#include<iostream>
using namespace std;

struct Node//создаём структура с именем node
{
	int data;//создаём информационное поле 
	Node* next;//создаём указатель, который будет указывать на следующий узел списка
};

Node* create_list(int n)//создаём функцию, которая будет создавать список
{
	Node* first;//указатель на начало списка 
	Node* p, * r;//вспомогательные указатели 
	first = new(Node);//выделяем память под новый элемент
	cout << endl;
	cin >> first->data;//просим ввести число(цифру)
	first->next = 0;//очищаем от "мусора" указатель
	p = first;
	for (int i = 0; i < n - 1; i++)//создаём цикл в котором будем создавать другие узлы списка
	{
		r = new(Node);//выделяем память под новый элемент списка
		cout << endl;
		cin >> r->data;//считываем информацию о новом элементе
		r->next = 0;//очищаем указатель от "мусора"
		p->next = r;
		p = r;
	}
	return first;//возвращаем получившийся список
}
void print_list(Node* first)//создаём функцию для вывода списка
{
	Node* p = first;//создаём указатель, который будет указывать на первый элемент списка
	while (p != 0)// цикл while будет выполняться пока не встретиться последний элемент
	{
		if (p->data%2 != 0)
		{
			cout << p->data << "\t";//выводим информационное поле
		}
		p = p->next;//переходим к новому элементу
	}
}
Node* delete_element(Node* first, int n)//создаём функцию, которая будет удалять узлы списка с чётным информационным полем
{
	Node* p = first;//создаём указатель, который будет указывать на первый элемент списка
	while (p!= 0)//цикл while будет выполняться пока не встретиться последний элемент
	{
		
		if (p->data % 2 == 0 && p->next != 0)//если встретился элемент списка с информационным полем, то...
		{
			p->data = p->next->data;//в информационное поле нужного элемента записываем информационное поле следующего элемента
			p->next = p->next->next;//указатель элемента с чётным информационным полем ставим на элемент следующий
		}
		p = p->next;//переходим к следующему элементу
	}
	return first;//возвращаем получившийся список
}

int main()
{
	int n;
	setlocale(LC_ALL, "ru");
	cout << "Введите количество эелементов";
	cin >> n;
	Node* first = create_list(n);
	delete_element(first, n);
	print_list(first);
}